{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["ContactForm","state","name","number","handleSubmit","e","preventDefault","props","onAddContact","setState","handlechange","target","value","onSubmit","this","className","styles","ContactForm_label","type","onChange","ContactForm_input","placeholder","ContactForm_btn","Component","ContactListItem","OnRemove","ContactList_item","onClick","ContactList_item_btn","ContactList","contacts","onRemoveContact","map","id","prototype","PropTypes","arrayOf","exact","string","isRequired","func","Filter","onChangeFilter","App","filter","findContact","contact","find","item","toLowerCase","addContact","uuid","contactFind","alert","prevState","changeFilter","getVisibleContact","includes","removeContact","contactId","persistedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","visibleContact","length","ReactDOM","render","document","querySelector","module","exports"],"mappings":"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","file":"static/js/main.615665f4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport styles from \"./ContactForm.module.css\";\nimport PropTypes from \"prop-types\";\n\nexport default class ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onAddContact(this.state.name, this.state.number);\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  handlechange = (e) => {\n    const { name } = e.target;\n\n    this.setState({ [name]: e.target.value });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.ContactForm}>\n        <label className={styles.ContactForm_label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handlechange}\n            className={styles.ContactForm_input}\n          />\n        </label>\n\n        <label className={styles.ContactForm_label}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handlechange}\n            placeholder=\"Example +380440000000\"\n            className={styles.ContactForm_input}\n          />\n        </label>\n\n        <button type=\"submit\" className={styles.ContactForm_btn}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport styles from \"./ContactList.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst ContactListItem = ({ name, number, OnRemove }) => (\n  <li className={styles.ContactList_item}>\n    <p>\n      - {name}: {number}\n    </p>\n    <button\n      type=\"button\"\n      onClick={OnRemove}\n      className={styles.ContactList_item_btn}\n    >\n      Delete\n    </button>\n  </li>\n);\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  OnRemove: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import React from \"react\";\nimport ContactListItem from \"./ContactListItem\";\nimport styles from \"./ContactList.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst ContactList = ({ contacts, onRemoveContact }) => (\n  <ul className={styles.ContactList}>\n    {contacts.map(({ id, name, number }) => (\n      <ContactListItem\n        key={id}\n        name={name}\n        number={number}\n        OnRemove={() => onRemoveContact(id)}\n      />\n    ))}\n  </ul>\n);\n\nContactList.prototype = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onRemoveContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Filter({ value, onChangeFilter }) {\n  return (\n    <div>\n      <p>Find contacts by name</p>\n      <input\n        type=\"text\"\n        value={value}\n        onChange={(e) => onChangeFilter(e.target.value)}\n      />\n    </div>\n  );\n}\n\nFilter.prototype = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\nimport uuid from \"react-uuid\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermion Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const persistedContacts = localStorage.getItem(\"contacts\");\n\n    if (persistedContacts) {\n      this.setState({ contacts: JSON.parse(persistedContacts) });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  findContact = (contacts, contact) =>\n    contacts.find(\n      (item) => item.name.toLowerCase() === contact.name.toLowerCase()\n    );\n\n  addContact = (name, number) => {\n    const contact = {\n      id: uuid(),\n      name,\n      number,\n    };\n\n    const contactFind = this.findContact(this.state.contacts, contact);\n\n    this.setState(() => {\n      if (contact.name) {\n        contactFind\n          ? alert(`${contactFind.name} is already in contacts`)\n          : this.setState((prevState) => ({\n              contacts: [...prevState.contacts, contact],\n            }));\n      } else {\n        alert(\"Input name please!\");\n      }\n\n      // contacts: [...prevState.contacts, contact],\n    });\n  };\n\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n\n  getVisibleContact = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  removeContact = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const visibleContact = this.getVisibleContact();\n\n    return (\n      <div>\n        <h1>PhoneBook</h1>\n        <ContactForm onAddContact={this.addContact} />\n\n        <h2>Contacts</h2>\n        {contacts.length > 1 && (\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\n        )}\n        {visibleContact.length > 0 && (\n          <ContactList\n            contacts={visibleContact}\n            onRemoveContact={this.removeContact}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__1zvAA\",\"ContactForm_label\":\"ContactForm_ContactForm_label__3P8Ek\",\"ContactForm_input\":\"ContactForm_ContactForm_input__2HggA\",\"ContactForm_btn\":\"ContactForm_ContactForm_btn__2DSYP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__4TvGi\",\"ContactList_item\":\"ContactList_ContactList_item__1wR0Z\",\"ContactList_item_btn\":\"ContactList_ContactList_item_btn__yspio\"};"],"sourceRoot":""}